package day9;

/* 8. Write a program, which will create a deadlock. */

class th1 extends Thread{
	String resrc1,resrc2;
	th1(String st1,String st2){
		resrc1 = st1;
		resrc2 = st2;
	}
	public void run() {
		synchronized (resrc1){
			System.out.println("Thread 1: locked resource 1");
			try {
				Thread.sleep(100);
			} 
			catch (Exception e) {
				e.printStackTrace();
			}  
			synchronized (resrc2) {  
				System.out.println("Thread 1: locked resource 2");  
			}
		}
	}
}

class th2 extends Thread{
	String resrc1,resrc2;
	th2(String st1,String st2){
		resrc1 = st1;
		resrc2 = st2;
	}
	public void run() {
		synchronized (resrc2){
			System.out.println("Thread 2 -> Resource Not Avaible 2");
			try {
				Thread.sleep(100);
			} 
			catch (Exception e) {
				e.printStackTrace();
			}  
			synchronized (resrc1) {  
				System.out.println("Thread 2: locked resource 1");  
			}
		}
	}
}

public class q8 {

	public static void main(String[] args) {
		final String resrc1 = "ABC";
		final String resrc2 = "XYZ";
		// t1 tries to lock resrc1 then resrc2  
		th1 t1 = new th1(resrc1,resrc2);
		// t2 tries to lock resrc2 then resrc1  
		th2 t2 = new th2(resrc1,resrc2);
		t1.start();
		t2.start();  
	}

}
